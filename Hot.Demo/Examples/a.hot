mod HotDemo.Main;

# use lib;

# 多行块函数定义
let TestFunc = fn c, d -> {
	let a = [];
	let b = {};
	let e = [1,2,3,10.2 + 4];
	let f = {
		key1: 123,
		key2: [1,2,3,4,5],
		func: fn a -> a + 100,
	};
	b = a;
	a.add(1234);

	let g = a[0];
	e[2] = 20;

	if d < 0 {
		d = 110;
	}
	else {
		d = d + 110;
	}

	if c < 0 {
		c = 120;
	}
	else if c = 0 {
		if d > 0 {
			c = c + 10;
		}
		c = 100;
	}
	else {
		c = c + 100;
	}

	loop c > 0 {
		c = c - 1;
	}

	loop i in e {
		a.add(i);
	}

	loop {
		if c > 0 {
			break;
		}
	}
	ret 1 + c > d - 5 && true;
};

# 单行表达式函数定义
let FuncOne = fn a, b -> a + b / a;

# 主函数
let Main = fn args -> {
	let a = 123.4;
	let b = 123.5;
	let c = test(a,b);
	ret a + b * 1 + 8 * 5 - 9 / 6;
};
